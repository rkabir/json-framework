/** @class SBJSON

 This is the parser and generator underlying the categories added to
 NSString and various other objects.
 
 Objective-C types are mapped to JSON types and back in the following way:
 
 @li NSNull -> Null -> NSNull
 @li NSString -> String -> NSMutableString
 @li NSArray -> Array -> NSMutableArray
 @li NSDictionary -> Object -> NSMutableDictionary
 @li NSNumber (-initWithBool:) -> Boolean -> NSNumber -initWithBool:
 @li NSNumber -> Number -> NSDecimalNumber

 In JSON the keys of an object must be strings. NSDictionary keys need
 not be, but attempting to convert an NSDictionary with non-string keys
 into JSON will throw an exception.

 NSNumber instances created with the +numberWithBool: method are
 converted into the JSON boolean "true" and "false" values, and vice
 versa. Any other NSNumber instances are converted to a JSON number the
 way you would expect. JSON numbers turn into NSDecimalNumber instances,
 as we can thus avoid any loss of precision.

 Strictly speaking correctly formed JSON text must have <strong>exactly
 one top-level container</strong>. (Either an Array or an Object.) Bare
 nulls, numbers, booleans and strings are not valid JSON on their own.
 It can be quite convenient to pretend that such fragments are valid
 JSON however. This class lets you do so.

 This class does its best to be as strict as possible, both in what it
 accepts and what it generates. (Other than the above mentioned support
 for JSON fragments.) For example, it does not support trailing commas
 in arrays or objects. Nor does it support embedded comments, or
 anything else not in the JSON specification.

 */
